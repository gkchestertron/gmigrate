#!/bin/bash

cmd=$1
schema=$2
proc=$3
defaultproc=$'CREATE OR REPLACE FUNCTION %schema%.%proc%() RETURNS void AS $$\nBEGIN\n  -- logic\nEND;\n$$ LANGUAGE plpgsql;'

# Usage
if [ -z "$cmd" ]; then
  echo Usage:
  echo '  gmigrate init|run'
  echo '  gmigrate add <schema> [procedure]'
  exit
fi

# init
if [ "$cmd" == "init" ]; then
  if [ -f .gmigrate ]; then
    echo .gmigrate exists. This project is already initialized.
    exit
  fi

  echo Initializing folder...

  # make gmigrate config and folder
  echo migrations=migrations > .gmigrate
  echo gschemas=gschemas >> .gmigrate
  mkdir gschemas

  exit
fi

# fail if not initialized
if [ ! -f .gmigrate ]; then
  echo There is no .gmigrate config. Either you are not in the root of your project or the project has not been initialized.
  echo "If you would like to initialize this folder, please run 'gmigrate init'."
# source the config if we have it
else
  source .gmigrate
fi

# add schema/proc
if [ "$cmd" == "add" ]; then
  # no schema
  if [ -z "$schema" ]; then
    echo Please provide a schema.
    exit 1
  # schema only
  elif [ -z "$proc" ]; then
    echo "Adding schema \"$schema\"..."
    mkdir -p $gschemas/$schema
    touch $gschemas/$schema/up.sql
    touch $gschemas/$schema/down.sql
    mkdir -p $gschemas/$schema/procedures
  # procedure
  elif [ -d $gschemas/$schema ]; then
    echo "Adding procedure \"$proc\" to schema \"$schema\"..."
    if [ ! -f $gschemas/$schema/$proc.sql ]; then

      echo "${defaultproc}" > $gschemas/$schema/procedures/$proc.sql
    else
      echo "Proc $proc already exists"
      exit 1
    fi
  else
    echo "Schema $schema does not exist."
    exit 1
  fi

  exit
fi

# generate migrations
if [ "$cmd" == "run" ]; then
  echo Generating migration files...
  headhash="$(git rev-parse --short HEAD 2> /dev/null | sed "s/\(.*\)/\1/")"
  migname="$migrations/$(date +%s)-$headhash"
  files=`git status -s | grep gschemas | sed -E "s/^.*($gschemas)/\1/"`

  # remove any migrations on the same hash
  for f in $(ls $migrations | grep $headhash); do
    rm $migrations/$f
  done

  # append the things to the ups and downs
  for file in ${files[@]}; do
    # ups
    if [ ! -z "$(echo $file | grep 'up.sql')" ]; then
      echo "-- $file" >> $migname-up.sql
      cat $file >> $migname-up.sql
      echo "" >> $migname-up.sql
    fi

    # downs
    if [ ! -z "$(echo $file | grep 'down.sql')" ]; then
      echo "-- $file" >> $migname-down.sql
      cat $file >> $migname-down.sql
      echo "" >> $migname-down.sql
    fi

    # procedures
    if [ ! -z "$(echo $file | grep '/procedures/' | grep '.sql')" ]; then
      echo "-- $file" >> $migname-up.sql
      cat $file >> $migname-up.sql
      echo "" >> $migname-up.sql

      # down is just old version of proc
      procdown=`git show HEAD:$file 2> /dev/null`
      if [ ! -z "$procdown" ]; then
        echo "-- $file" >> $migname-down.sql
        echo "${procdown}" >> $migname-down.sql
      echo "" >> $migname-down.sql
      fi
    fi
  done

  exit
fi

echo command "$cmd" not recongnized
